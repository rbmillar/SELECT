setwd("T:/Russell_SSD/ACTIVE/Teaching/SHOU/SHOU lectures")
install.packages("reticulate")
install.packages("showtext")
install.packages("reticulate")
install.packages("showtext")
Rich.fit=SELECT(sqKP.df,var.names=v.names,,dtype="ph",stype="richards")
Pope
data(Pope)
Pope
plot(nwide/nfine,data=Pope)
plot(nwide/nfine~Lengths,data=Pope)
Pope=transform(Pope,n=nfine+nwide,y=nwide/(nfine+nwide))
Pope
plot(y~Lengths,data=Pope)
Pope=transform(Pope,n=nfine+nwide,y=nwide/(nfine+nwide))
Pope
plot(y~Lengths,data=Pope)
abline(h=0.5,lty=3)
Tots=Raw2Tots(sqKP.df,v.names)
setwd("T:/Russell_SSD/ACTIVE/Teaching/SHOU/FrontiersInFish/Rdemos/Selectivity/PairedTwinHauls")
#Read in data and remove zero catch lengths
sqKP.df=read.csv("../Data/SqNorKP.csv",header=T) #500 by 4
#Quick peek at data
head(sqKP.df)
Tots=Raw2Tots(sqKP.df,v.names)
require(SELECT)
require(dplyr)
Tots=Raw2Tots(sqKP.df,v.names)
v.names=c("lgth","control","codend")
Tots=Raw2Tots(sqKP.df,v.names)
Tots=transform(Tots,n=codend+control,y=codend/(codend+control))
Tots
plot(y~lgth,data=Tots)
abline(h=0.5,lty=3)
v.names=c("Lengths","nfine","nwide")
Logist.fit=SELECT(Pope,var.names=v.names,dtype="ph")
plot(Logist.fit)
ModelCheck(Logist.fit)
summary(Logist.fit)
Pope
Logist.fit=SELECT(Pope,var.names=v.names,dtype="ph")
plot(Logist.fit)
ModelCheck(Logist.fit)
summary(Logist.fit)
Rich.fit=SELECT(Pope,var.names=v.names,,dtype="ph",stype="richards")
plot(Rich.fit)
ModelCheck(Rich.fit)
summary(Rich.fit)
v.names=c("lgth","control","codend")
require(mgcv)
CR.fit=SplineSELECT(sqKP.df,var.names=v.names,q.names=q.fracs)
require(mgcv)
CR.fit=SplineSELECT(sqKP.df,var.names=v.names)
require(mgcv)
CR.fit=SplineSELECT(sqKP.df,var.names=v.names)
plot(sqKP.df$lgth,resid(CR.fit),type="h")
resid(CR.fit)
sqKP.df
Tots=Raw2Tots(sqKP.df,v.names)
Tots=transform(Tots,n=codend+control,y=codend/(codend+control))
Tots
plot(y~lgth,data=Tots)
abline(h=0.5,lty=3)
Tos
Tots
Logist.fit=SELECT(Tots,var.names=v.names,dtype="ph")
plot(Logist.fit)
ModelCheck(Logist.fit)
summary(Logist.fit)
Rich.fit=SELECT(Tots,var.names=v.names,dtype="ph",stype="richards")
plot(Rich.fit)
ModelCheck(Rich.fit)
summary(Rich.fit)
require(mgcv)
CR.fit=SplineSELECT(Tots,var.names=v.names)
plot(Tots$lgth,resid(CR.fit),type="h")
Tots
Tots$lgth
resid(CR.fit)
require(mgcv)
Tots=subset(Tots,n>0)
CR.fit=SplineSELECT(Tots,var.names=v.names)
plot(Tots$lgth,resid(CR.fit),type="h")
abline(h=0)
plot(y~lgth,data=sqKP.df)
require(mgcv)
Tots=subset(Tots,n>0)
CR.fit=SplineSELECT(Tots,var.names=v.names)
plot(Tots$lgth,resid(CR.fit),type="h")
abline(h=0)
plot(y~lgth,data=Tots)
points(Tots$lgth,fitted(CR.fit),type="l")
Pope
require(mgcv)
CR.fit=SplineSELECT(Pope,var.names=v.names)
v.names=c("Lengths","nfine","nwide")
require(mgcv)
CR.fit=SplineSELECT(Pope,var.names=v.names)
plot(Pope$lgth,resid(CR.fit),type="h")
require(mgcv)
CR.fit=SplineSELECT(Pope,var.names=v.names)
plot(Pope$Lengths,resid(CR.fit),type="h")
abline(h=0)
plot(y~Lengths,data=Pope)
points(Pope$Lengths,fitted(CR.fit),type="l")
knitr::include_graphics("TwinTrawl.jpg")
require(SELECT)
require(dplyr)
#Read in data and remove zero catch lengths
sqKP.df=read.csv("../Data/SqNorKP.csv",header=T) #500 by 4
#Quick peek at data
head(sqKP.df)
v.names=c("lgth","control","codend")
Tots=Raw2Tots(sqKP.df,v.names)
Tots=transform(Tots,n=codend+control,y=codend/(codend+control))
Tots
plot(y~lgth,data=Tots)
abline(h=0.5,lty=3)
Logist.fit=SELECT(Tots,var.names=v.names,dtype="ph")
plot(Logist.fit)
ModelCheck(Logist.fit)
summary(Logist.fit)
Rich.fit=SELECT(Tots,var.names=v.names,dtype="ph",stype="richards")
plot(Rich.fit)
ModelCheck(Rich.fit)
summary(Rich.fit)
devtools::install( paste0("T:/Russell_SSD/ACTIVE/CurrentWork/RPackages/SELECT") )
devtools::install( paste0("T:/Russell_SSD/ACTIVE/CurrentWork/RPackages/SELECT") )
#devtools::install( paste0("T:/Russell_SSD/ACTIVE/CurrentWork/RPackages/SELECT") )
require(SELECT)
require(dplyr)
#Read in data and remove zero catch lengths
sqKP.df=read.csv("../Data/SqNorKP.csv",header=T) #500 by 4
sqKP.df=subset(sqKP.df,control+codend>0) #192 by 4
#Quick peek at data
head(sqKP.df)
v.names=c("lgth","control","codend")
Tots=Raw2Tots(sqKP.df,v.names)
Tots=transform(Tots,n=codend+control,y=codend/(codend+control))
Tots
plot(y~lgth,data=Tots,las=1)
abline(h=0.5,lty=3)
Logist.fit=SELECT(Tots,var.names=v.names,dtype="ec")
plot(Logist.fit)
ModelCheck(Logist.fit)
Estimates(Logist.fit)
devtools::install( paste0("T:/Russell_SSD/ACTIVE/CurrentWork/RPackages/SELECT") )
#devtools::install( paste0("T:/Russell_SSD/ACTIVE/CurrentWork/RPackages/SELECT") )
require(SELECT)
require(dplyr)
#Read in data and remove zero catch lengths
sqKP.df=read.csv("../Data/SqNorKP.csv",header=T) #500 by 4
sqKP.df=subset(sqKP.df,control+codend>0) #192 by 4
#Quick peek at data
head(sqKP.df)
v.names=c("lgth","control","codend")
Tots=Raw2Tots(sqKP.df,v.names)
Tots=transform(Tots,n=codend+control,y=codend/(codend+control))
Tots
plot(y~lgth,data=Tots,las=1)
abline(h=0.5,lty=3)
Logist.fit=SELECT(Tots,var.names=v.names,dtype="ec")
plot(Logist.fit)
ModelCheck(Logist.fit)
Estimates(Logist.fit)
Rich.fit=SELECT(Tots,var.names=v.names,dtype="ec",stype="richards")
plot(Rich.fit)
ModelCheck(Rich.fit)
Estimates(Rich.fit)
HaulCatch=Raw2Tots(sqKP.df,v.names,sumHauls=F)
HaulCatch=transform(HaulCatch,n=codend+control,y=codend/(codend+control))
require(lattice) #For xyplot
xyplot(y~lgth | PairID,data=HaulCatch)
Logist.fit2=SELECT(sqKP.df,var.names=v.names,dtype="ec",sumHauls=F)
ModelCheck(Logist.fit2, minE=5, plots=F)
knitr::opts_chunk$set(fig.height = 3.5)
data(Trout)
Trout
