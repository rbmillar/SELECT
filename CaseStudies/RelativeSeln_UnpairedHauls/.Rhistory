dir()
install.package("./FDR")
library(FDR)
library("./FDR")
install.packages("./FDR")
ls()
FDR
library(FDR)
usethis
glmmTMB
create_package
usethis::create_package("./BootstrapHauls")
usethis::use.package("data.table")
usethis::use_package("data.table")
?usethis
usethis::create_package("./SplineNCAP")
install.packages(c("backports", "bootstrap", "callr", "car", "carData", "cli", "clipr", "curl", "data.table", "devtools", "digest", "doParallel", "dplyr", "ellipsis", "foreach", "ggplot2", "gmm", "haven", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "iterators", "KernSmooth", "knitr", "later", "maptools", "markdown", "modelr", "MuMIn", "openssl", "openxlsx", "pillar", "pkgbuild", "pkgconfig", "plyr", "processx", "promises", "purrr", "quantreg", "R6", "Rcpp", "RcppArmadillo", "RcppEigen", "rgl", "rlang", "rmarkdown", "roxygen2", "rvest", "scales", "selectr", "shiny", "sp", "sys", "testthat", "tidyr", "tidyverse", "tinytex", "vctrs", "VGAM", "webshot", "whisker", "xfun", "xml2", "zip"))
?use_package
usethis::create_package("SplineCAP")
View(D)
install.packages("usethis")
library(usethis)
library(installr)
updateR()
PkgName="SELECT"
#PkgName="SHOUtoolkit"
#Create package folder structure (and opens 2nd RStudio for the project)
#usethis::create_package(PkgName)
setwd(paste0("T:/Russell_SSD/ACTIVE/CurrentWork/RPackages/",PkgName))
roxygen2::roxygenise() #or devtools::document()
setwd("T:/Russell_SSD/ACTIVE/CurrentWork/RPackages/SELECT/CaseStudies/RelativeSeln_UnpairedHauls")
knitr::opts_chunk$set(fig.height = 3.5)
devtools::install( paste0("T:/Russell_SSD/ACTIVE/CurrentWork/RPackages/",PkgName) )
#devtools::install_github("rbmillar/SELECT")
require(tidyverse)
require(mgcv)
require(SELECT)
require(readxl) #This package is installed with tidyverse
nsim=99 #Number of bootstrap or permutation simulations. Should be >=999 in practice.
GearA.df=read_excel("SchoolPrawnLenFreqs.xlsx", sheet = "32 square trawl")
GearB.df=read_excel("SchoolPrawnLenFreqs.xlsx", sheet = "35 square trawl")
CommonHauls=intersect(unique(GearA.df$Day),unique(GearB.df$Day))
GearA.df = GearA.df |>
rename(Haul=Day, n=No.school)  |>
filter(!Haul %in% CommonHauls) |>
mutate(Haul=paste0(Haul,".A"),q=1/Sf.school,Gear="A") |>
select(-Sf.school)
GearB.df = GearB.df |>
rename(Haul=Day, n=No.school) |>
filter(!Haul %in% CommonHauls) |>
mutate(Haul=paste0(Haul,".B"),q=1/Sf.school,Gear="B") |>
select(-Sf.school)
cat("Gears A and B have",length(unique(GearB.df$Haul)),
"and",length(unique(GearA.df$Haul)),"hauls respectively.\n")
Df=rbind(GearA.df,GearB.df) #Stack the two dataframes
Df = Df |> filter(CL>=5 & CL<=25)
#Df |> group_by(Haul) |> summarise(n=sum(n/q)) #Check the haul totals
Gears.df=SELECT.FORMAT(Df,by=c("Haul","CL"),gear="Gear",freq="n",
q.name="q",paired=F)
head(Gears.df)
