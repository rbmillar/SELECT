1-pchisq(80.55,67)
# Chunk 5: BinormMaster
par(mar=c(4,4,1,4))
plot(SEL5,ylab="Master curve")
legend("topright",
legend=c("Bimodal","factor(lgth)","s(lgth)"),lty=1:3)
par(oma=c(0,0,0,0),mar=c(4,4,1,4),mfrow=c(1,1),las=1)
lgth.seq=seq(min(Df$lgth),max(Df$lgth),len=100)
v.seq=seq(min(Df$v),max(Df$v),len=100)
SEL.r0=PlotCurves(SEL5,plotlens=lgth.seq,plot.out=F)
GAM1.r0=exp( predict(GAM1,newdata=data.frame(lgth=438,v=v.seq),terms="s(v)") )
GAM2.r0=exp( predict(GAM2,newdata=data.frame(lgth=438,v=v.seq),terms="s(v)") )
# Chunk 1
knitr::opts_chunk$set(cache=T)
BinormMaster="Bimodal-normal master selectivity curve from a fit
that assumes no knowledge of the population length distribution."
NoLenKnowMaster="Master selectivity curve from a GAM fit
that assumes no knowledge of the population length distribution."
LenDistn="Estimated population length distribution from a GAM fit that assumes
the population length distribution is a smooth function of length."
SelnComparison="Master selectivity curves from the parametric bimodal normal fit,
GAM with length as a factor (no knowledge of length distribution),
and GAM with length as a smooth function of length"
# Chunk 2
#Packages tidyverse, gratia and SELECT need to be installed,
#and also the remotes package to install SELECT from GitHub.
#remotes::install_github("rbmillar/SELECT")
require(SELECT)
require(mgcv)
require(tidyverse)
require(gratia) #Provides the `draw` function
# Chunk 3: Trout data
data(Trout) #To load trout data from SELECT package
Trout
# Chunk 4: SELECT analyses
par(oma=c(0,0,0,0),mar=c(4,4,1,4))
Meshs=Trout$Meshsize
Counts=Trout$Counts
Vars=names(Counts)
SEL1=SELECT(Counts,Vars,dtype="dc",stype="norm.loc",Meshsize=Meshs)
AIC1=AIC(SEL1,type="Poisson")
SEL2=SELECT(Counts,Vars,dtype="dc",stype="normal",Meshsize=Meshs)
AIC2=AIC(SEL2,type="Poisson")
SEL3=SELECT(Counts,Vars,dtype="dc",stype="gamma",Meshsize=Meshs)
AIC3=AIC(SEL3,type="Poisson")
SEL4=SELECT(Counts,Vars,dtype="dc",stype="lognorm",Meshsize=Meshs)
AIC4=AIC(SEL4,type="Poisson")
SEL5=SELECT(Counts,Vars,dtype="dc",stype="binormal",Meshsize=Meshs)
AIC5=AIC(SEL5,type="Poisson")
SEL6=SELECT(Counts,Vars,dtype="dc",stype="bilognorm",Meshsize=Meshs)
AIC6=AIC(SEL6,type="Poisson")
cat("Poisson AICs are",AIC1,AIC2,AIC3,AIC4,AIC5,AIC6)
GOF.stats=ModelCheck(SEL5,print.out=F)$gof #Draws residual plot
GOF.stats
1-pchisq(80.55,67)
# Chunk 5: BinormMaster
par(mar=c(4,4,1,4))
plot(SEL5,ylab="Master curve")
# Chunk 6: Pivot longer
#Pivot longer
colnames(Counts)[-1]=Trout$Meshsize
Df=pivot_longer(Counts,cols=!lgth,values_to="y",names_to="Msize")
Df$Msize=as.numeric(Df$Msize)
Df$v=Df$lgth/Df$Msize
cat("The dataset has",nrow(Df),"rows\n")
head(Df) #A peek at the first few rows
# Chunk 7: NoLenKnowMaster
par(oma=c(0,0,0,0),mar=c(4,4,1,4),mfrow=c(1,2))
GAM1=gam(y~as.factor(lgth)+s(v,bs="cr",k=5),
family=poisson,data=Df,method="ML")
AIC(GAM1)
draw(GAM1,select="s(v)",fun=exp,
xlab="length/meshsize",ylab="Master curve")
# Chunk 8: LenDistn
par(oma=c(0,0,0,0),mar=c(4,4,1,4),mfrow=c(2,1))
GAM2=gam(y~s(lgth,bs="cr",k=7)+s(v,bs="cr",k=5),
family=poisson,data=Df,method="ML")
AIC(GAM2)
draw(GAM2,select="s(lgth)",fun=exp,
xlab="Length (mm)",ylab="Relative distribution")
# Chunk 9: SelnComparison
par(oma=c(0,0,0,0),mar=c(4,4,1,4),mfrow=c(1,1),las=1)
lgth.seq=seq(min(Df$lgth),max(Df$lgth),len=100)
v.seq=seq(min(Df$v),max(Df$v),len=100)
SEL.r0=PlotCurves(SEL5,plotlens=lgth.seq,plot.out=F)
GAM1.r0=exp( predict(GAM1,newdata=data.frame(lgth=438,v=v.seq),terms="s(v)") )
GAM2.r0=exp( predict(GAM2,newdata=data.frame(lgth=438,v=v.seq),terms="s(v)") )
#X1=plot(GAM1,select=0) #Uses 100 pts by default
#v.seq=X1[[1]]$x
#r=exp(X1[[1]]$fit)
plot(SEL.r0$v,SEL.r0$r,type="l",lty=1,
xlab="Length/Meshsize",ylab="Master curve")
points(v.seq,GAM1.r0/max(GAM1.r0),type="l",lty=2)
points(v.seq,GAM2.r0/max(GAM2.r0),type="l",lty=3,lwd=1.5)
legend("topright",
legend=c("Bimodal","factor(lgth)","s(lgth)"),lty=1:3)
SEL.r0
head(SEL.r0)
xx=fitted(SEL5)
head(xx)
PP=predict(SEL5,plotlens=lgth.seq)
SELECT.predict
predict
predict.SELECT
source("T:/Russell_SSD/ACTIVE/CurrentWork/RPackages/SELECT/R/GENERICS.R")
PP=predict(SEL5,lens=lgth.seq)
predict.SELECT=function(obj,lens=NULL,...) {
if(!is.null(lens) & !is.vector(ens))
stop("Error: lens must be a vector of lengths")
PlotCurves(obj,plotlens=lens,plot.out=F,...) }
SEL5$rtype
names(SEL5)
source("T:/Russell_SSD/ACTIVE/CurrentWork/RPackages/SELECT/R/FIT_FUNCTIONS.R")
source("T:/Russell_SSD/ACTIVE/CurrentWork/RPackages/SELECT/R/FIT_FUNCTIONS.R")
# Chunk 1
knitr::opts_chunk$set(cache=T)
BinormMaster="Bimodal-normal master selectivity curve from a fit
that assumes no knowledge of the population length distribution."
NoLenKnowMaster="Master selectivity curve from a GAM fit
that assumes no knowledge of the population length distribution."
LenDistn="Estimated population length distribution from a GAM fit that assumes
the population length distribution is a smooth function of length."
SelnComparison="Master selectivity curves from the parametric bimodal normal fit,
GAM with length as a factor (no knowledge of length distribution),
and GAM with length as a smooth function of length"
# Chunk 2
#Packages tidyverse, gratia and SELECT need to be installed,
#and also the remotes package to install SELECT from GitHub.
#remotes::install_github("rbmillar/SELECT")
require(SELECT)
require(mgcv)
require(tidyverse)
require(gratia) #Provides the `draw` function
# Chunk 3: Trout data
data(Trout) #To load trout data from SELECT package
Trout
# Chunk 4: SELECT analyses
par(oma=c(0,0,0,0),mar=c(4,4,1,4))
Meshs=Trout$Meshsize
Counts=Trout$Counts
Vars=names(Counts)
SEL1=SELECT(Counts,Vars,dtype="dc",stype="norm.loc",Meshsize=Meshs)
AIC1=AIC(SEL1,type="Poisson")
ModelCheck(SEL1)
SEL1$Data
fit=SEL1
minE=0
xlab="Length (cm)"
ylab = "Propn in exptl gear"
lens=fit$Data[,1]; nlens=length(lens)
Meshsize=fit$Meshsize; nmeshes=length(Meshsize)
O=fit$Data[,-1]; #Matrix of observed counts
Const=mchoose(O,log=T) #Constant for log-likelihoods
Ototals=apply(O,1,sum,na.rm=TRUE)
Opropns=O/Ototals
NullPropns=matrix(apply(O,2,sum,na.rm=TRUE),nrow=nlens,ncol=nmeshes,byrow=T)/sum(O)
r=propncurves(fit$rtype) #Get propn catch curve function
rmatrix=outer(lens,Meshsize,r,fit$par)
rmatrix[is.na(O)]=NA #No fitted retention for missing meshsizes
rmatrix=t(t(rmatrix)*fit$rel.power)
phi=rmatrix/apply(rmatrix,1,sum,na.rm=TRUE)
E=apply(O,1,sum,na.rm=TRUE)*phi
Pearson.resids=(O-E)/sqrt(E)
Pearson.chisq=sum(Pearson.resids^2,na.rm=TRUE)
wk=O*log(O/E); wk[is.na(wk)]=0
O
E
SEL1$par
phi
Ototals
Oprops
Opropns
rmatrix
Meshsize
rmatrix=outer(lens,Meshsize,r,fit$par)
rmatrix
rmatrix[is.na(O)]=NA #No fitted retention for missing meshsizes
rmatrix
fit$rel.power
xf=function(M,b=1/M) print(b)
xf(M)
xf(3)
y=rnorm(10)
x=1:10
lf=lm(y~x)
lf[]
lf$arg
lf$x
lf$x[]
SELECT
SEL5
SEL5[]
names(SEL5)
source("T:/Russell_SSD/ACTIVE/CurrentWork/RPackages/SELECT/R/FIT_FUNCTIONS.R")
source("T:/Russell_SSD/ACTIVE/CurrentWork/RPackages/SELECT/R/FIT_FUNCTIONS.R")
source("T:/Russell_SSD/ACTIVE/CurrentWork/RPackages/SELECT/R/GENERICS.R")
source("T:/Russell_SSD/ACTIVE/CurrentWork/RPackages/SELECT/R/FIT_FUNCTIONS.R")
source("T:/Russell_SSD/ACTIVE/CurrentWork/RPackages/SELECT/R/FIT_FUNCTIONS.R")
source("T:/Russell_SSD/ACTIVE/CurrentWork/RPackages/SELECT/R/GENERICS.R")
source("T:/Russell_SSD/ACTIVE/CurrentWork/RPackages/SELECT/R/FIT_FUNCTIONS.R")
source("T:/Russell_SSD/ACTIVE/CurrentWork/RPackages/SELECT/R/HELPER_FUNCTIONS.R")
# Chunk 1
knitr::opts_chunk$set(cache=T)
BinormMaster="Bimodal-normal master selectivity curve from a fit
that assumes no knowledge of the population length distribution."
NoLenKnowMaster="Master selectivity curve from a GAM fit
that assumes no knowledge of the population length distribution."
LenDistn="Estimated population length distribution from a GAM fit that assumes
the population length distribution is a smooth function of length."
SelnComparison="Master selectivity curves from the parametric bimodal normal fit,
GAM with length as a factor (no knowledge of length distribution),
and GAM with length as a smooth function of length"
# Chunk 2
#Packages tidyverse, gratia and SELECT need to be installed,
#and also the remotes package to install SELECT from GitHub.
#remotes::install_github("rbmillar/SELECT")
require(SELECT)
require(mgcv)
require(tidyverse)
require(gratia) #Provides the `draw` function
# Chunk 3: Trout data
data(Trout) #To load trout data from SELECT package
Trout
# Chunk 4: SELECT analyses
par(oma=c(0,0,0,0),mar=c(4,4,1,4))
Meshs=Trout$Meshsize
Counts=Trout$Counts
Vars=names(Counts)
SEL1=SELECT(Counts,Vars,dtype="dc",stype="norm.loc",Meshsize=Meshs)
source("T:/Russell_SSD/ACTIVE/CurrentWork/RPackages/SELECT/R/FIT_FUNCTIONS.R")
# Chunk 1
knitr::opts_chunk$set(cache=T)
BinormMaster="Bimodal-normal master selectivity curve from a fit
that assumes no knowledge of the population length distribution."
NoLenKnowMaster="Master selectivity curve from a GAM fit
that assumes no knowledge of the population length distribution."
LenDistn="Estimated population length distribution from a GAM fit that assumes
the population length distribution is a smooth function of length."
SelnComparison="Master selectivity curves from the parametric bimodal normal fit,
GAM with length as a factor (no knowledge of length distribution),
and GAM with length as a smooth function of length"
# Chunk 2
#Packages tidyverse, gratia and SELECT need to be installed,
#and also the remotes package to install SELECT from GitHub.
#remotes::install_github("rbmillar/SELECT")
require(SELECT)
require(mgcv)
require(tidyverse)
require(gratia) #Provides the `draw` function
# Chunk 3: Trout data
data(Trout) #To load trout data from SELECT package
Trout
# Chunk 4: SELECT analyses
par(oma=c(0,0,0,0),mar=c(4,4,1,4))
Meshs=Trout$Meshsize
Counts=Trout$Counts
Vars=names(Counts)
SEL1=SELECT(Counts,Vars,dtype="dc",stype="norm.loc",Meshsize=Meshs)
AIC1=AIC(SEL1,type="Poisson")
SEL2=SELECT(Counts,Vars,dtype="dc",stype="normal",Meshsize=Meshs)
AIC2=AIC(SEL2,type="Poisson")
SEL3=SELECT(Counts,Vars,dtype="dc",stype="gamma",Meshsize=Meshs)
AIC3=AIC(SEL3,type="Poisson")
SEL4=SELECT(Counts,Vars,dtype="dc",stype="lognorm",Meshsize=Meshs)
AIC4=AIC(SEL4,type="Poisson")
SEL5=SELECT(Counts,Vars,dtype="dc",stype="binormal",Meshsize=Meshs)
AIC5=AIC(SEL5,type="Poisson")
SEL6=SELECT(Counts,Vars,dtype="dc",stype="bilognorm",Meshsize=Meshs)
AIC6=AIC(SEL6,type="Poisson")
cat("Poisson AICs are",AIC1,AIC2,AIC3,AIC4,AIC5,AIC6)
GOF.stats=ModelCheck(SEL5,print.out=F)$gof #Draws residual plot
GOF.stats
1-pchisq(80.55,67)
# Chunk 1
knitr::opts_chunk$set(cache=T)
BinormMaster="Bimodal-normal master selectivity curve from a fit
that assumes no knowledge of the population length distribution."
NoLenKnowMaster="Master selectivity curve from a GAM fit
that assumes no knowledge of the population length distribution."
LenDistn="Estimated population length distribution from a GAM fit that assumes
the population length distribution is a smooth function of length."
SelnComparison="Master selectivity curves from the parametric bimodal normal fit,
GAM with length as a factor (no knowledge of length distribution),
and GAM with length as a smooth function of length"
# Chunk 2
#Packages tidyverse, gratia and SELECT need to be installed,
#and also the remotes package to install SELECT from GitHub.
#remotes::install_github("rbmillar/SELECT")
require(SELECT)
require(mgcv)
require(tidyverse)
require(gratia) #Provides the `draw` function
# Chunk 3: Trout data
data(Trout) #To load trout data from SELECT package
Trout
# Chunk 4: SELECT analyses
par(oma=c(0,0,0,0),mar=c(4,4,1,4))
Meshs=Trout$Meshsize
Counts=Trout$Counts
Vars=names(Counts)
SEL1=SELECT(Counts,Vars,dtype="dc",stype="norm.loc",Meshsize=Meshs)
AIC1=AIC(SEL1,type="Poisson")
SEL2=SELECT(Counts,Vars,dtype="dc",stype="normal",Meshsize=Meshs)
AIC2=AIC(SEL2,type="Poisson")
SEL3=SELECT(Counts,Vars,dtype="dc",stype="gamma",Meshsize=Meshs)
AIC3=AIC(SEL3,type="Poisson")
SEL4=SELECT(Counts,Vars,dtype="dc",stype="lognorm",Meshsize=Meshs)
AIC4=AIC(SEL4,type="Poisson")
SEL5=SELECT(Counts,Vars,dtype="dc",stype="binormal",Meshsize=Meshs)
AIC5=AIC(SEL5,type="Poisson")
SEL6=SELECT(Counts,Vars,dtype="dc",stype="bilognorm",Meshsize=Meshs)
AIC6=AIC(SEL6,type="Poisson")
cat("Poisson AICs are",AIC1,AIC2,AIC3,AIC4,AIC5,AIC6)
GOF.stats=ModelCheck(SEL5,print.out=F)$gof #Draws residual plot
GOF.stats
1-pchisq(80.55,67)
# Chunk 5: BinormMaster
par(mar=c(4,4,1,4))
plot(SEL5,ylab="Master curve")
# Chunk 6: Pivot longer
#Pivot longer
colnames(Counts)[-1]=Trout$Meshsize
Df=pivot_longer(Counts,cols=!lgth,values_to="y",names_to="Msize")
Df$Msize=as.numeric(Df$Msize)
Df$v=Df$lgth/Df$Msize
cat("The dataset has",nrow(Df),"rows\n")
head(Df) #A peek at the first few rows
# Chunk 7: NoLenKnowMaster
par(oma=c(0,0,0,0),mar=c(4,4,1,4),mfrow=c(1,2))
GAM1=gam(y~as.factor(lgth)+s(v,bs="cr",k=5),
family=poisson,data=Df,method="ML")
AIC(GAM1)
draw(GAM1,select="s(v)",fun=exp,
xlab="length/meshsize",ylab="Master curve")
BIC(GAM1)
par(oma=c(0,0,0,0),mar=c(4,4,1,4),mfrow=c(2,1))
GAM2=gam(y~s(lgth,bs="cr",k=7)+s(v,bs="cr",k=5),
family=poisson,data=Df,method="ML")
AIC(GAM2)
draw(GAM2,select="s(lgth)",fun=exp,
xlab="Length (mm)",ylab="Relative distribution")
PP=predict(SEL5,lens=lgth.seq)
source("T:/Russell_SSD/ACTIVE/CurrentWork/RPackages/SELECT/R/GENERICS.R")
fitted(SEL5)
predict(SEL5,lens=lgth.seq)
PP=predict(SEL5,lens=lgth.seq)
PP
plot(SEL5)
points(v.seq,GAM1.r0/max(GAM1.r0),type="l",lty=2)
lgth.seq=seq(min(Df$lgth),max(Df$lgth),len=100)
PlotCurves(SEL5,plotlens=lgth.seq,plot.out=F)
PlotCurves(SEL5,plotlens=lgth.seq)
points(v.seq,GAM1.r0/max(GAM1.r0),type="l",lty=2)
points(v.seq,GAM2.r0/max(GAM2.r0),type="l",lty=3,lwd=1.5)
legend("topright",
legend=c("Bimodal","factor(lgth)","s(lgth)"),lty=1:3)
PlotCurves(SEL5,plotlens=lgth.seq,ylab="Master curve")
par(oma=c(0,0,0,0),mar=c(4,4,1,4),mfrow=c(1,1),las=1)
lgth.seq=seq(min(Df$lgth),max(Df$lgth),len=100)
v.seq=seq(min(Df$v),max(Df$v),len=100)
PlotCurves(SEL5,plotlens=lgth.seq,ylab="Master curve")
points(v.seq,GAM1.r0/max(GAM1.r0),type="l",lty=2)
points(v.seq,GAM2.r0/max(GAM2.r0),type="l",lty=3,lwd=1.5)
legend("topright",
legend=c("Bimodal","factor(lgth)","s(lgth)"),lty=1:3)
GAM1.r0=exp( predict(GAM1,newdata=data.frame(v=v.seq),terms="s(v)") )
dG=draw(GAM1,select="s(v)",fun=exp)
dG
dG{}
dG[]
dG$Data
dG$data
dG$data$v
dG$data$.estimate
Trout
GAM2$data
aa=draw(GAM2,select="s(lgth)",fun=exp,
xlab="Length (mm)",ylab="Relative distribution")
aa$data
View(aa)
as.data.frame(aa$data)
ModelCheck(SEL5)
?ModelCheck(SEL5)
ModelCheck(SEL5,print.out=F)
ModelCheck(SEL5)
plot(SEL5)
ModelCheck(SEL5,plots=c(T,T))
ModelCheck
AIC5=AIC(SEL5,type="Poisson")
AIC5
logLik(SEL5,type="df")
logLik(SEL5,type="Poisson")
logLik(SEL5)
deviance(SEL5)
AIC6=AIC(SEL6,type="Poisson")
AIC6
AIC(SEL6,type="Poisson")
knitr::opts_chunk$set(fig.height=2.5,cache=T)
\renewenvironment{knitrout}{\renewcommand{\baselinestretch}{.85}}{}
par(oma=c(0,0,0,0),mar=c(4,4,1,4),mfrow=c(1,1),las=1)
SEL1=SELECT(Counts,Vars,dtype="dc",stype="norm.loc",Meshsize=Meshs)
par(oma=c(0,0,0,0),mar=c(4,4,1,4),mfrow=c(1,1),las=1)
Meshs=Trout$Meshsize
Counts=Trout$Counts
Vars=names(Counts)
par(oma=c(0,0,0,0),mar=c(4,4,1,4),mfrow=c(1,1),las=1)
SEL1=SELECT(Counts,Vars,dtype="dc",stype="norm.loc",Meshsize=Meshs)
AIC1=AIC(SEL1,type="Poisson")
SEL2=SELECT(Counts,Vars,dtype="dc",stype="normal",Meshsize=Meshs)
AIC2=AIC(SEL2,type="Poisson")
SEL3=SELECT(Counts,Vars,dtype="dc",stype="gamma",Meshsize=Meshs)
AIC3=AIC(SEL3,type="Poisson")
SEL4=SELECT(Counts,Vars,dtype="dc",stype="lognorm",Meshsize=Meshs)
AIC4=AIC(SEL4,type="Poisson")
SEL5=SELECT(Counts,Vars,dtype="dc",stype="binormal",Meshsize=Meshs)
AIC5=AIC(SEL5,type="Poisson")
SEL6=SELECT(Counts,Vars,dtype="dc",stype="bilognorm",Meshsize=Meshs)
AIC6=AIC(SEL6,type="Poisson")
cat("Poisson AICs are",AIC1,AIC2,AIC3,AIC4,AIC5,AIC6)
GOF.stats=ModelCheck(SEL5,print.out=F)$gof
GOF.stats
cat("The goodness of fit test p-value is",1-pchisq(80.55,67))
SEL5
456/102
601/101
601/102
# Chunk 1
knitr::opts_chunk$set(fig.height=2.5,cache=T)
ResidPlot="Bubble plot of the deviance residuals from the bimodal normal
fit. Filled and open circles indicate positive and negative residuals,
respectively. Bubble diameter is proportion to the magnitude of the
residual."
BinormMaster="Bimodal-normal master selectivity curve from a fit
that assumes no knowledge of the population length distribution."
NoLenKnowMaster="Master selectivity curve from a GAM fit
that assumes no knowledge of the population length distribution."
LenDistn="Estimated population length distribution from a GAM fit that assumes
the population length distribution is a smooth function of length."
SelnComparison="Master selectivity curves from the parametric bimodal normal fit,
GAM with length as a factor (no knowledge of length distribution),
and GAM with length as a smooth function of length"
# Chunk 2
#Packages tidyverse, gratia and SELECT need to be installed,
#and also the remotes package to install SELECT from GitHub.
#remotes::install_github("rbmillar/SELECT")
require(SELECT)
require(mgcv)
require(tidyverse)
require(gratia) #Provides the `draw` function
# Chunk 3: Trout data
data(Trout) #To load trout data from SELECT package
Trout
# Chunk 4: Set variable names
par(oma=c(0,0,0,0),mar=c(4,4,1,4),mfrow=c(1,1),las=1)
Meshs=Trout$Meshsize
Counts=Trout$Counts
Vars=names(Counts)
# Chunk 5: SELECT analyses
par(oma=c(0,0,0,0),mar=c(4,4,1,4),mfrow=c(1,1),las=1)
SEL1=SELECT(Counts,Vars,dtype="dc",stype="norm.loc",Meshsize=Meshs)
AIC1=AIC(SEL1,type="Poisson")
SEL2=SELECT(Counts,Vars,dtype="dc",stype="normal",Meshsize=Meshs)
AIC2=AIC(SEL2,type="Poisson")
SEL3=SELECT(Counts,Vars,dtype="dc",stype="gamma",Meshsize=Meshs)
AIC3=AIC(SEL3,type="Poisson")
SEL4=SELECT(Counts,Vars,dtype="dc",stype="lognorm",Meshsize=Meshs)
AIC4=AIC(SEL4,type="Poisson")
SEL5=SELECT(Counts,Vars,dtype="dc",stype="binormal",Meshsize=Meshs)
AIC5=AIC(SEL5,type="Poisson")
SEL6=SELECT(Counts,Vars,dtype="dc",stype="bilognorm",Meshsize=Meshs)
AIC6=AIC(SEL6,type="Poisson")
cat("Poisson AICs are",AIC1,AIC2,AIC3,AIC4,AIC5,AIC6)
GOF.stats=ModelCheck(SEL5,print.out=F)$gof
GOF.stats
cat("The goodness of fit test p-value is",1-pchisq(80.55,67))
# Chunk 6: ResidPlot
par(oma=c(0,0,0,0),mar=c(4,4,1,4),mfrow=c(1,1),las=1)
SEL5=SELECT(Counts,Vars,dtype="dc",stype="binormal",Meshsize=Meshs)
ModelCheck(SEL5,print.out=F)
# Chunk 7: BinormMaster
par(oma=c(0,0,0,0),mar=c(4,4,1,4),mfrow=c(1,1),las=1)
plot(SEL5,ylab="Master curve")
# Chunk 8: Pivot longer
#Pivot longer
colnames(Counts)[-1]=Trout$Meshsize
Df=pivot_longer(Counts,cols=!lgth,values_to="y",names_to="Msize")
Df=data.frame(Df)
Df$Msize=as.numeric(Df$Msize)
Df$v=Df$lgth/Df$Msize
cat("The dataset Df has",nrow(Df),"rows\n")
# Chunk 9: Peek at Df
head(Df) #A peek at the first few rows
# Chunk 10: NoLenKnowMaster
par(oma=c(0,0,0,0),mar=c(4,4,1,4),mfrow=c(1,2))
GAM1=gam(y~as.factor(lgth)+s(v,bs="cr",k=5),
family=poisson,data=Df,method="ML")
draw(GAM1,select="s(v)",fun=exp,
xlab="length/meshsize",ylab="Master curve")
# Chunk 11
AIC(GAM1)
par(oma=c(0,0,0,0),mar=c(4,4,1,4),mfrow=c(2,1))
GAM2=gam(y~s(lgth,bs="cr",k=7)+s(v,bs="cr",k=5),
family=poisson,data=Df,method="ML")
AIC(GAM2)
draw(GAM2,select="s(lgth)",fun=exp,
xlab="Length (mm)",ylab="Relative distribution")
Trout
AIC5
AIC(GAM1)
source("T:/Russell_SSD/ACTIVE/CurrentWork/RPackages/SELECT/R/GENERICS.R")
source("T:/Russell_SSD/ACTIVE/CurrentWork/RPackages/SELECT/R/FIT_FUNCTIONS.R")
source("T:/Russell_SSD/ACTIVE/CurrentWork/RPackages/SELECT/R/HELPER_FUNCTIONS.R")
